library(DESeq2)
library(tximport)
library(readr)
library(rhdf5)
# read the csv file containing the metadata
meta.data <- read_csv("~/Desktop/brainRNASeq/R_analysis/VTA_v2/meta_data_VTA_v2.csv")
# read in the files with the list of transcipt ID corresponding to gene ID
tx2gene <- read_csv("~/Desktop/brainRNASeq/R_analysis/input_doc/tx2gene.csv")
# define the directory with the kallisto outputs
kallisto.output.directory <- "~/Desktop/brainRNASeq/pseudoalignment"
# get the paths of the kallisto outputs (abundance.h5 files) for all the samples
# and test if the files exists
abundance.h5.files <- file.path(kallisto.output.directory, "output",
meta.data$file_name, "abundance.h5")
names(abundance.h5.files) <- meta.data$sample
file.exists(abundance.h5.files)
# use tximport to combine the abundance.h5 files, and conventing the transcript
# ID into gene ID
abundance.all.samples <- tximport(abundance.h5.files, type = "kallisto",
tx2gene = tx2gene)
# define the experimental design
experimental.design <- ~ genotype + condition + genotype:condition
# creating the DESeqDataSet object(dds) from Tximport
dds <- DESeqDataSetFromTximport(abundance.all.samples, meta.data,
design = experimental.design)
# relevel to make sure that the reference is wildtype 'WT'
dds$genotype <- relevel(dds$genotype, "WT")
# filtering out the genes that have too low expression
dds <- dds[rowSums(counts(dds)) > 25, ]
# creating the DESeqDataSet object again
dds <- DESeq(dds)
# get the names for comparsion between different experimental conditions
resultsNames(dds)
plotDispEsts(dds, ylim = c(1e-6, 1e1))
par(mar=c(8,5,2,2))
boxplot(log10(assays(dds)[["cooks"]]), range=0, las=2)
library(ggplot2)
library(RColorBrewer)
library(ClassDiscovery)
rlog.transformed.dds  <- rlog(dds)
pca.data <- plotPCA(rlog.transformed.dds ,
intgroup=c("genotype", "condition"),
returnData=TRUE)
percentVar <- round(100 * attr(pca.data, "percentVar"))
ggplot(pca.data, aes(PC1, PC2, color=genotype,shape=condition)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
# calculate the sample distance
sample.distance <- dist(t(assay(rlog.transformed.dds )))
# convert the sample distance into a matrix
distance.matrix <- as.matrix(sample.distance)
# define the rownames
rownames(distance.matrix) <- paste(rlog.transformed.dds$genotype,
rlog.transformed.dds$condition, sep="-")
# define the colour
colours = colorRampPalette(rev(brewer.pal(9, "Blues")))(255)
# plot the heatmap
aspectHeatmap(distance.matrix, labCol=NULL,
col = colours,
hExp=2,
wExp=1.4,
margins=c(6,3))
library(DESeq2)
library(ggplot2)
# load the DESeqResult object
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
dds.results <- readRDS("VTA_v2_DESeq2.RData")
plotMA(dds.results, ylim = c(-2, 2))
metadata(dds.results)$filterThreshold
plot(metadata(dds.results)$filterNumRej, xlab="quantile of baseMean",
ylab="number of rejections")
hist(dds.results$pvalue, breaks = 20, col ='grey',
main = "The effect of light on WT", xlab = "pvalue", ylab = "Frequency")
library(DESeq2)
library(ggplot2)
# load the DESeqResult object
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
dds <- readRDS("VTA_v2_DESeq2.RData")
dds.results <- results(dds, contrast = c("condition", "light_induced", "control"))
plotMA(dds.results, ylim = c(-2, 2))
metadata(dds.results)$filterThreshold
plot(metadata(dds.results)$filterNumRej, xlab="quantile of baseMean",
ylab="number of rejections")
hist(dds.results$pvalue, breaks = 20, col ='grey',
main = "The effect of light on WT", xlab = "pvalue", ylab = "Frequency")
library(DESeq2)
library(ggplot2)
library(dplyr)
source('~/Desktop/brainRNASeq/R_analysis/function/add_gene_annotations.R')
source('~/Desktop/brainRNASeq/R_analysis/function/add_remark.R')
# read in the gene annotation database, and select the information needed (
# ensembl_gene_id, mgi_symbol and the description)
gene.info <- read.csv("~/Desktop/brainRNASeq/R_analysis/input_doc/gene_info_database.csv",
header = TRUE, stringsAsFactors = FALSE)
gene.info <- select(gene.info, ensembl_gene_id, mgi_symbol, description)
gene.info <- unique(gene.info)
# load the DESeqResult object
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
dds <- readRDS("VTA_v2_DESeq2.RData")
dds.results <- results(dds, contrast = c("condition", "light_induced", "control"))
plotMA(dds.results, ylim = c(-2, 2))
metadata(dds.results)$filterThreshold
plot(metadata(dds.results)$filterNumRej, xlab="quantile of baseMean",
ylab="number of rejections")
hist(dds.results$pvalue, breaks = 20, col ='grey',
main = "The effect of light on WT", xlab = "pvalue", ylab = "Frequency")
# wt.light.treatment
dds.results.table <- results(dds, contrast = c("condition", "light_induced", "control"))
dds.results.table <- addGeneInfo(dds.results, gene.info)
dds.results.table <- addRemark(dds.results)
dds.results.table$remark <- as.factor(dds.results.table$remark)
summary(dds.results.table$remark)
# Volcano plot
ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue))) +
geom_jitter(aes(color = remark)) +
ggtitle("... Volcano plot")
# wt.light.treatment
dds.results.table <- addGeneInfo(dds.results, gene.info)
dds.results.table <- addRemark(dds.results)
dds.results.table$remark <- as.factor(dds.results.table$remark)
summary(dds.results.table$remark)
View(dds.results.table)
