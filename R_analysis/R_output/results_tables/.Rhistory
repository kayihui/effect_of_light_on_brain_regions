NAc <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN.1)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables")
SCN <- read.csv("SCN/SCN_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
LHb <- read.csv("LHb/LHb_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables")
SCN <- read.csv("SCN/SCN_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
VTA <- read.csv("VTA/VTA_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
LHb <- read.csv("LHb/LHb_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
NAc <- read.csv("NAc/NAc_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 9) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.95),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "red")
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables")
SCN <- read.csv("SCN/SCN_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA <- read.csv("VTA/VTA_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
LHb <- read.csv("LHb/LHb_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "red", size = 1)
return(g)
}
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "red", size = 5)
return(g)
}
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "red", size = 2.5)
return(g)
}
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "red", size = 2)
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables")
SCN <- read.csv("SCN/SCN_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
LHb <- read.csv("LHb/LHb_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(readr)
VTA_effectAcrossGenotype <- read_csv("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/VTA/VTA_effectAcrossGenotype.csv")
View(VTA_effectAcrossGenotype)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/VTA")
library(VennDiagram)
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/")
VTA_effectAcrossGenotype <- read.csv("VTA/VTA_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_WT <- read.csv("VTA/VTA_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_Per1 <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_effectAcrossGenotype$remark <- as.factor(VTA_effectAcrossGenotype$remark)
VTA_WT$remark <- as.factor(VTA_WT$remark)
VTA_Per1$remark <- as.factor(VTA_Per1$remark)
sumary(VTA_effectAcrossGenotype$remark)
summary(VTA_effectAcrossGenotype$remark)
summary(VTA_WT$remark)
summary(VTA_Per1$remark)
NAc_effectAcrossGenotype <- read.csv("NAc/NAc_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_WT <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_Per1 <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_effectAcrossGenotype$remark <- as.factor(NAc_effectAcrossGenotype$remark)
NAc_WT$remark <- as.factor(NAc_WT$remark)
NAc_Per1$remark <- as.factor(NAc_Per1$remark)
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/")
NAc_effectAcrossGenotype <- read.csv("NAc/NAc_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_WT <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_Per1 <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_effectAcrossGenotype$remark <- as.factor(NAc_effectAcrossGenotype$remark)
NAc_WT$remark <- as.factor(NAc_WT$remark)
NAc_Per1$remark <- as.factor(NAc_Per1$remark)
summary(VTA_Per1$remark)
summary(VTA_Per1$remark)
summary(NAc_Per1$remark)
summary(NAc_WT$remark)
summary(NAc_effectAcrossGenotype$remark)
library(VennDiagram)
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/")
significant_genes <- function(dds.results.table){
dds.results.table$remark <- "not significant"
dds.results.table$remark [dds.results.table$padj < 0.1] <- "significant"
dds.results.table$remark  <- factor(dds.results.table$remark,
levels = c("not significant", "significant"))
return(dds.results.table)
}
VTA_effectAcrossGenotype <- read.csv("VTA/VTA_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_WT <- read.csv("VTA/VTA_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_Per1 <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_effectAcrossGenotype <- significant_genes(VTA_effectAcrossGenotype)
VTA_WT <- significant_genes(VTA_WT)
VTA_Per1$remark <- significant_genes(VTA_Per1)
NAc_effectAcrossGenotype <- read.csv("NAc/NAc_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_WT <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_Per1 <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_effectAcrossGenotype <- significant_genes(NAc_effectAcrossGenotype$remark)
NAc_WT <- significant_genes(NAc_WT$remark)
NAc_Per1 <- significant_genes(NAc_Per1$remark)
summary(VTA_effectAcrossGenotype)
summary(VTA_WT)
summary(VTA_Per1)
library(VennDiagram)
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/")
significant_genes <- function(dds.results.table){
dds.results.table$remark <- "not significant"
dds.results.table$remark [dds.results.table$padj < 0.1] <- "significant"
dds.results.table$remark  <- factor(dds.results.table$remark,
levels = c("not significant", "significant"))
return(dds.results.table)
}
VTA_effectAcrossGenotype <- read.csv("VTA/VTA_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_WT <- read.csv("VTA/VTA_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_Per1 <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_effectAcrossGenotype <- significant_genes(VTA_effectAcrossGenotype)
VTA_WT <- significant_genes(VTA_WT)
VTA_Per1 <- significant_genes(VTA_Per1)
NAc_effectAcrossGenotype <- read.csv("NAc/NAc_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_WT <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_Per1 <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_effectAcrossGenotype <- significant_genes(NAc_effectAcrossGenotype$remark)
NAc_WT <- significant_genes(NAc_WT$remark)
NAc_Per1 <- significant_genes(NAc_Per1$remark)
library(VennDiagram)
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/")
significant_genes <- function(dds.results.table){
dds.results.table$remark <- "not significant"
dds.results.table$remark [dds.results.table$padj < 0.1] <- "significant"
dds.results.table$remark  <- factor(dds.results.table$remark,
levels = c("not significant", "significant"))
return(dds.results.table)
}
VTA_effectAcrossGenotype <- read.csv("VTA/VTA_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_WT <- read.csv("VTA/VTA_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_Per1 <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_effectAcrossGenotype <- significant_genes(VTA_effectAcrossGenotype)
VTA_WT <- significant_genes(VTA_WT)
VTA_Per1 <- significant_genes(VTA_Per1)
NAc_effectAcrossGenotype <- read.csv("NAc/NAc_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_WT <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_Per1 <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_effectAcrossGenotype <- significant_genes(NAc_effectAcrossGenotype)
NAc_WT <- significant_genes(NAc_WT)
NAc_Per1 <- significant_genes(NAc_Per1)
summary(VTA_Per1)
se1 <- VTA_effectAcrossGenotype$ensembl_gene_id[VTA_effectAcrossGenotype$remark %in% "significant"]
set1 <- VTA_effectAcrossGenotype$ensembl_gene_id[VTA_effectAcrossGenotype$remark %in% "significant"]
set2 <- VTA_WT$ensembl_gene_id[VTA_WT$remark %in% "significant"]
set3 <- VTA_Per1ensembl_gene_id[VTA_Per1$remark %in% "significant"]
set1 <- VTA_effectAcrossGenotype$ensembl_gene_id[VTA_effectAcrossGenotype$remark %in% "significant"]
set2 <- VTA_WT$ensembl_gene_id[VTA_WT$remark %in% "significant"]
set3 <- VTA_Per1$ensembl_gene_id[VTA_Per1$remark %in% "significant"]
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE
)
set1 <- VTA_effectAcrossGenotype$ensembl_gene_id[VTA_effectAcrossGenotype$remark %in% "significant"]
set2 <- VTA_WT$ensembl_gene_id[VTA_WT$remark %in% "significant"]
set3 <- VTA_Per1$ensembl_gene_id[VTA_Per1$remark %in% "significant"]
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE
)
set1 <- NAc_effectAcrossGenotype$ensembl_gene_id[NAc_effectAcrossGenotype$remark %in% "significant"]
set2 <- NAc_WT$ensembl_gene_id[NAc_WT$remark %in% "significant"]
set3 <- NAc_Per1$ensembl_gene_id[NAc_Per1$remark %in% "significant"]
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#13_venn_diagramm.png',
output=TRUE
)
set1 <- NAc_effectAcrossGenotype$ensembl_gene_id[NAc_effectAcrossGenotype$remark %in% "significant"]
set2 <- NAc_WT$ensembl_gene_id[NAc_WT$remark %in% "significant"]
set3 <- NAc_Per1$ensembl_gene_id[NAc_Per1$remark %in% "significant"]
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#13_venn_diagramm.png',
output=TRUE
)
set1 <- NAc_effectAcrossGenotype$ensembl_gene_id[NAc_effectAcrossGenotype$remark %in% "significant"]
set2 <- NAc_WT$ensembl_gene_id[NAc_WT$remark %in% "significant"]
set3 <- NAc_Per1$ensembl_gene_id[NAc_Per1$remark %in% "significant"]
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#13_venn_diagramm.png',
output=TRUE
)
