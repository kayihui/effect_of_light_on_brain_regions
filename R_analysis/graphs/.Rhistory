g <- g + xlim(0, 10) + ylim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/SCN")
SCN.1 <- read.csv("SCN_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/SCN")
SCN.1 <- read.csv("SCN_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
SCN.2.updated <- prepare_data_for_graph(SCN.2)
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/SCN")
SCN.1 <- read.csv("SCN_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.2 <- read.csv("SCN_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.3 <- read.csv("SCN_WTvsPer1_control.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.4 <- read.csv("SCN_WTvsPer1_light.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.5 <- read.csv("SCN_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.2.updated <- prepare_data_for_graph(SCN.2)
vocanlo_plot(SCN.2.updated)
SCN.3.updated <- prepare_data_for_graph(SCN.3)
vocanlo_plot(SCN.3.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + geom_label(label="Gpr88", x= gpr88$log2FoldChange + 1, y=- (log10(gpr88$pvalue)+0.5), color = "green")
return(g)
}
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + geom_label(label="Gpr88", x= gpr88$log2FoldChange + 1, y=- log10(gpr88$pvalue)+0.5, color = "green")
return(g)
}
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + geom_label(label="Gpr88", x= gpr88$log2FoldChange + 1, y=-log10(gpr88$pvalue)+0.5, color = "green")
return(g)
}
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + geom_label(label="Gpr88", x= gpr88$log2FoldChange + 0.3, y=-log10(gpr88$pvalue)+0.3, color = "green")
return(g)
}
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + geom_label(label="Gpr88", x= gpr88$log2FoldChange + 0.5, y=-log10(gpr88$pvalue)+0.3, color = "green")
return(g)
}
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + geom_label(data = data.frame(x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88"),
aes(x = x, y = y, label = label,  color = "green"))
return(g)
}
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + annotate(geom = "Gpr88", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "green")
return(g)
}
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
vocanlo_plot <- function(dds.results.table){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)")
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g +  theme(text = element_text(size=16),
axis.title.y = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank())
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
SCN.1.updated <- prepare_data_for_graph(SCN.1)
vocanlo_plot(SCN.1.updated)
SCN.2.updated <- prepare_data_for_graph(SCN.2)
vocanlo_plot(SCN.2.updated)
SCN.3.updated <- prepare_data_for_graph(SCN.3)
vocanlo_plot(SCN.3.updated)
?plot_title
?plot_title()
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables")
SCN <- read.csv("SCN/SCN_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA <- read.csv("VTA/VTA_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
LHb <- read.csv("LHb/LHb_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN.1)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables")
SCN <- read.csv("SCN/SCN_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
LHb <- read.csv("LHb/LHb_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables")
SCN <- read.csv("SCN/SCN_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
VTA <- read.csv("VTA/VTA_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
LHb <- read.csv("LHb/LHb_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
NAc <- read.csv("NAc/NAc_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 9) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 10) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.95),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "green")
g <- g + annotate(geom = "label", x = gpr88$log2FoldChange + 0.8, y = -log10(gpr88$pvalue)+0.3, label = "Gpr88", color="green")
return(g)
}
VTA.updated <- prepare_data_for_graph(VTA)
vocanlo_plot(VTA.updated, "VTA")
SCN.updated <- prepare_data_for_graph(SCN)
vocanlo_plot(SCN.updated, "SCN")
LHb.updated <- prepare_data_for_graph(LHb)
vocanlo_plot(LHb.updated, "LHb")
NAc.updated <- prepare_data_for_graph(NAc)
vocanlo_plot(NAc.updated, "NAc")
library(VennDiagram)
setwd("~/Desktop/brainRNASeq/R_analysis/R_output/results_tables/")
significant_genes <- function(dds.results.table){
dds.results.table$remark <- "not significant"
dds.results.table$remark [dds.results.table$padj < 0.1] <- "significant"
dds.results.table$remark  <- factor(dds.results.table$remark,
levels = c("not significant", "significant"))
return(dds.results.table)
}
# SCN
SCN_WT <- read.csv("SCN/SCN_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN_Per1 <- read.csv("SCN/SCN_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
SCN_WT <- significant_genes(SCN_WT)
SCN_Per1 <- significant_genes(SCN_Per1)
# LHb
LHb_WT <- read.csv("LHb/LHb_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
LHb_Per1 <- read.csv("LHb/LHb_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
LHb_WT <- significant_genes(LHb_WT)
LHb_Per1 <- significant_genes(LHb_Per1)
# VTA
VTA_WT <- read.csv("VTA/VTA_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_Per1 <- read.csv("VTA/VTA_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
VTA_WT <- significant_genes(VTA_WT)
VTA_Per1 <- significant_genes(VTA_Per1)
# NAc
NAc_WT <- read.csv("NAc/NAc_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_Per1 <- read.csv("NAc/NAc_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
NAc_WT <- significant_genes(NAc_WT)
NAc_Per1 <- significant_genes(NAc_Per1)
SCN.WT.genes <- SCN_WT$ensembl_gene_id[SCN_WT$remark %in% "significant"]
SCN.Per1.genes <- SCN_Per1$ensembl_gene_id[SCN_Per1$remark %in% "significant"]
venn.plot1 <- venn.diagram(
x = list(SCN.WT.genes, SCN.Per1.genes),
category.names = c("WT " , "Per1"),
filename = NULL,
output=TRUE
)
grid.draw(venn.plot1)
grid.draw(venn.plot1)
venn_plot <- function(df1, df2){
WT.genes <- df1$ensembl_gene_id[df1$remark %in% "significant"]
Per1.genes <- df2$ensembl_gene_id[df2$remark %in% "significant"]
venn.plot1 <- venn.diagram(
x = list(WT.genes, Per1.genes),
category.names = c("WT " , "Per1"),
filename = NULL,
output=TRUE
)
return(venn.plot1)
}
venn_plot(SCN_WT, SCN_Per1)
grid.draw(venn_plot(SCN_WT, SCN_Per1))
grid.draw(venn_plot(SCN_WT, SCN_Per1))
grid.draw(venn_plot(LHb_WT, LHb_Per1))
grid.draw(venn_plot(LHb_WT, LHb_Per1))
grid.draw(venn_plot(NAc_WT, NAc_Per1))
grid.draw(venn_plot(NAc_WT, NAc_Per1))
grid.draw(venn_plot(VTA_WT, VTA_Per1))
grid.draw(venn_plot(VTA_WT, VTA_Per1))
venn_plot <- function(df1, df2, df3, df4){
SCN.genes <- df1$ensembl_gene_id[df1$remark %in% "significant"]
LHb.genes <- df2$ensembl_gene_id[df2$remark %in% "significant"]
VTA.genes <- df2$ensembl_gene_id[df2$remark %in% "significant"]
NAc.genes <- df2$ensembl_gene_id[df2$remark %in% "significant"]
venn.plot2 <- venn.diagram(
x = list(SCN.genes, LHb.genes, VTA.genes, NAc.genes),
category.names = c("SCN" , "LHb", "VTA", "NAc"),
filename = NULL,
output=TRUE
)
return(venn.plot2)
}
venn_plot2 <- function(df1, df2, df3, df4){
SCN.genes <- df1$ensembl_gene_id[df1$remark %in% "significant"]
LHb.genes <- df2$ensembl_gene_id[df2$remark %in% "significant"]
VTA.genes <- df2$ensembl_gene_id[df2$remark %in% "significant"]
NAc.genes <- df2$ensembl_gene_id[df2$remark %in% "significant"]
venn.plot2 <- venn.diagram(
x = list(SCN.genes, LHb.genes, VTA.genes, NAc.genes),
category.names = c("SCN" , "LHb", "VTA", "NAc"),
filename = NULL,
output=TRUE
)
return(venn.plot2)
}
grid.draw(venn_plot2(SCN_WT, LHb_WT, VTA_WT, NAc_WT))
grid.draw(venn_plot2(SCN_WT, LHb_WT, VTA_WT, NAc_WT))
grid.draw(venn_plot2(SCN_Per1, LHb_Per1, VTA_Per1, NAc_Per1))
grid.draw(venn_plot2(SCN_Per1, LHb_Per1, VTA_Per1, NAc_Per1))
install.packages("venneuler")
install.packages("reshape2")
library(venneuler)
install.packages("rJava")
library(venneuler)
library(venneuler)
library(rJava)
