source('~/Desktop/brainRNASeq/R_analysis/VTA_v2/script_output_DESeq2_Results_VTA_v2.R')
source('~/Desktop/brainRNASeq/R_analysis/VTA_v2/script_DESeq2ResultsToCSV_VTA_v2.R')
source('~/Desktop/brainRNASeq/R_analysis/VTA_v2/script_DESeq2ResultsToCSV_VTA_v2.R')
write.csv(assay(dds.VTA), "VTA_v2_normalized_gene_counts.csv", row.names = TRUE)
write.csv(assay(rlog(dds.VTA)), "VTA_v2_rlog_transformated_data.csv", row.names = TRUE)
source('~/Desktop/brainRNASeq/R_analysis/VTA_v2/VTA_v2_construct_DESeq2DataSet.R')
library(DESeq2)
library(ggplot2)
# load the DESeqResult object
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
dds.results <- readRDS("VTA_v2_WT_lightvsControl.RData")
plotMA(dds.results, ylim = c(-2, 2))
metadata(dds.results)$filterThreshold
plot(metadata(dds.results)$filterNumRej, xlab="quantile of baseMean",
ylab="number of rejections")
hist(dds.results$pvalue, breaks = 20, col ='grey',
main = "The effect of light on WT", xlab = "pvalue", ylab = "Frequency")
# load the dataframe with the gene info and remark added
dds.results.table <- read.csv("VTA_v2_WT_lightvsControl.csv", header = TRUE,
stringsAsFactors = FALSE)
dds.results.table$remark <- as.factor(dds.results.table$remark)
summary(dds.results.table$remark)
# Volcano plot
ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue))) +
geom_jitter(aes(color = remark)) +
ggtitle("WT(control Vs light induced) Volcano plot")
library(ClassDiscovery)
library(RColorBrewer)
rlog.transformated <- read.csv("VTA_v2_rlog_transformated_data.csv")
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- dds.results.table[dds.results.table$log2FoldChange > 1,]
significant.genes.name <- significant.genes$ensembl_gene_id
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
library(readr)
VTA_v2_all_comparsion <- read_csv("VTA_v2_all_comparsion.csv")
View(VTA_v2_all_comparsion)
library(tidyr)
library(dplyr)
library(ggplot2)
library(readr)
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
VTA_v2_all_comparsion <- read_csv("VTA_v2_all_comparsion.csv")
library(ClassDiscovery)
library(RColorBrewer)
rlog.transformated <- read.csv("VTA_v2_rlog_transformated_data.csv")
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- VTA_v2_all_comparsion[VTA_v2_all_comparsion$padj < 0.1, ]
significant.genes.name <- unique(significant.genes$ensembl_gene_id)
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
sig.gene.wt <- VTA_v2_all_comparsion[VTA_v2_all_comparsion$comparsion %in% "WT (control vs Light)", ]
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- sig.gene.wt[sig.gene.wt$padj < 0.1, ]
significant.genes.name <- unique(significant.genes$ensembl_gene_id)
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
levels(VTA_v2_all_comparsion$comparsion)
as.factor(VTA_v2_all_comparsion$comparsion)
trial <- as.factor(VTA_v2_all_comparsion$comparsion)
trail
trial
summary(trial)
sig.gene.per1 <- VTA_v2_all_comparsion[VTA_v2_all_comparsion$comparsion %in% "Per1 (control vs Light)", ]
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- sig.gene.per1[sig.gene.per1$padj < 0.1, ]
significant.genes.name <- unique(significant.genes$ensembl_gene_id)
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
sig.gene.ct <- VTA_v2_all_comparsion[VTA_v2_all_comparsion$comparsion %in% "WT vs Per1 (control)", ]
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- sig.gene.wt[sig.gene.ct$padj < 0.1, ]
significant.genes.name <- unique(significant.genes$ensembl_gene_id)
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
sig.gene.ct <- VTA_v2_all_comparsion[VTA_v2_all_comparsion$comparsion %in% "WT vs Per1 (control)", ]
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- sig.gene.ct[sig.gene.ct$padj < 0.1, ]
significant.genes.name <- unique(significant.genes$ensembl_gene_id)
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
sig.gene.light <- VTA_v2_all_comparsion[VTA_v2_all_comparsion$comparsion %in% "WT vs Per1 (Light)", ]
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- sig.gene.light[sig.gene.light$padj < 0.1, ]
significant.genes.name <- unique(significant.genes$ensembl_gene_id)
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
sig.gene.interaction <- VTA_v2_all_comparsion[VTA_v2_all_comparsion$comparsion %in% "Different of light response between Per1 and WT", ]
# subset the list of ensembl_gene_id of genes that are not "not significant"
significant.genes <- sig.gene.interaction[sig.gene.interaction$padj < 0.1, ]
significant.genes.name <- unique(significant.genes$ensembl_gene_id)
# subset the rlog transformed data with the significant genes list
rlog.significant.genes <- rlog.transformated[ rlog.transformated$X %in% significant.genes.name,]
rownames(rlog.significant.genes) <- rlog.significant.genes$X
rlog.significant.genes <- rlog.significant.genes[,-1]
rlog.significant.genes <- as.matrix(rlog.significant.genes)
aspectHeatmap(rlog.significant.genes, labCol=NULL, Colv = NA,
hExp=2,
wExp=1.4,
margins=c(6,3))
library(VennDiagram)
library(ggplot2)
library(readr)
setwd("~/Desktop/brainRNASeq/R_analysis/")
VTA_v1 <- read_csv("R_ouptu/results_tables/VTA/VTA_all_comparsion.csv")
library(VennDiagram)
library(ggplot2)
library(readr)
setwd("~/Desktop/brainRNASeq/R_analysis/")
VTA_v1 <- read_csv("R_output/results_tables/VTA/VTA_all_comparsion.csv")
VTA_v2 <- read_csv("VTA_v2/VTA_v2_all_comparsion.csv")
VTA_v1.sig <- VTA_v1$ensembl_gene_id[VTA_v1$padj < 0.1]
VTA_v1.sig <- unique(VTA_v1.sig)
VTA_v2.sig <- VTA_v2$ensembl_gene_id[VTA_v2$padj < 0.1]
VTA_v2.sig <- unique(VTA_v2.sig)
venn.plot1 <- venn.diagram(
x = list(VTA_v1.sig, VTA_v2.sig),
category.names = c("version 1" , "version 2"),
filename = NULL,
output=TRUE
)
grid.draw(venn.plot1)
grid.draw(venn.plot1)
VTA_v1.wt <- VTA_v1[VTA_v1$comparsion %in% "WT (control vs Light)", ]
VTA_v1.sig <- VTA_v1.wt$ensembl_gene_id[VTA_v1.wt$padj < 0.1]
VTA_v1.sig <- unique(VTA_v1.sig)
VTA_v2.wt <- VTA_v2[VTA_v2$comparsion %in% "WT (control vs Light)", ]
VTA_v2.sig <- VTA_v2.wt$ensembl_gene_id[VTA_v2.wt$padj < 0.1]
VTA_v2.sig <- unique(VTA_v2.sig)
venn.plot1 <- venn.diagram(
x = list(VTA_v1.sig, VTA_v2.sig),
category.names = c("version 1" , "version 2"),
filename = NULL,
output=TRUE
)
grid.draw(venn.plot1)
grid.draw(venn.plot1)
plotVenn <- function(compare.exp){
VTA_v1 <- VTA_v1[VTA_v1$comparsion %in% ompare.exp, ]
VTA_v1.sig <- VTA_v1$ensembl_gene_id[VTA_v1$padj < 0.1]
VTA_v1.sig <- unique(VTA_v1.sig)
VTA_v2 <- VTA_v2[VTA_v2$comparsion %in% "WT (control vs Light)", ]
VTA_v2.sig <- VTA_v2$ensembl_gene_id[VTA_v2$padj < 0.1]
VTA_v2.sig <- unique(VTA_v2.sig)
venn.plot1 <- venn.diagram(
x = list(VTA_v1.sig, VTA_v2.sig),
category.names = c("version 1" , "version 2"),
filename = NULL,
output=TRUE
)
return(venn.plot1)
}
grid.draw(venn.plot1)
plot1 <- plotVenn("WT (control vs Light)")
plotVenn <- function(compare.exp){
VTA_v1 <- VTA_v1[VTA_v1$comparsion %in% compare.exp, ]
VTA_v1.sig <- VTA_v1$ensembl_gene_id[VTA_v1$padj < 0.1]
VTA_v1.sig <- unique(VTA_v1.sig)
VTA_v2 <- VTA_v2[VTA_v2$comparsion %in% "WT (control vs Light)", ]
VTA_v2.sig <- VTA_v2$ensembl_gene_id[VTA_v2$padj < 0.1]
VTA_v2.sig <- unique(VTA_v2.sig)
venn.plot1 <- venn.diagram(
x = list(VTA_v1.sig, VTA_v2.sig),
category.names = c("version 1" , "version 2"),
filename = NULL,
output=TRUE
)
return(venn.plot1)
}
plot1 <- plotVenn("WT (control vs Light)")
grid.draw(plot1)
grid.draw(plot1)
plot2 <- plotVenn("Per1 (control vs Light)")
grid.draw(plot2)
grid.draw(plot2)
plot3 <- plotVenn("WT vs Per1 (control)")
grid.draw(plot3)
grid.draw(plot3)
plot4 <- plotVenn("WT vs Per1 (Light)")
grid.draw(plot4)
grid.draw(plot4)
plotVenn <- function(compare.exp){
VTA_v1 <- VTA_v1[VTA_v1$comparsion %in% compare.exp, ]
VTA_v1.sig <- VTA_v1$ensembl_gene_id[VTA_v1$padj < 0.1]
VTA_v1.sig <- unique(VTA_v1.sig)
VTA_v2 <- VTA_v2[VTA_v2$comparsion %in% compare.exp, ]
VTA_v2.sig <- VTA_v2$ensembl_gene_id[VTA_v2$padj < 0.1]
VTA_v2.sig <- unique(VTA_v2.sig)
venn.plot1 <- venn.diagram(
x = list(VTA_v1.sig, VTA_v2.sig),
category.names = c("version 1" , "version 2"),
filename = NULL,
output=TRUE
)
return(venn.plot1)
}
plot1 <- plotVenn("WT (control vs Light)")
grid.draw(plot1)
grid.draw(plot1)
plot2 <- plotVenn("Per1 (control vs Light)")
grid.draw(plot2)
grid.draw(plot2)
plot3 <- plotVenn("WT vs Per1 (control)")
grid.draw(plot3)
grid.draw(plot3)
plot4 <- plotVenn("WT vs Per1 (Light)")
grid.draw(plot4)
grid.draw(plot4)
plot5 <- plotVenn("Different of light response between Per1 and WT")
grid.draw(plot5)
grid.draw(plot5)
VTA_v2[VTA_2$ensembl_gene_id %in% "Gpr88",]
VTA_v2[VTA_v2$ensembl_gene_id %in% "Gpr88",]
as.data.frame(VTA_v2[VTA_v2$ensembl_gene_id %in% "Gpr88",])
as.data.frame(VTA_v2[VTA_v2$mgi_symbol %in% "Gpr88",])
as.data.frame(VTA_v2[VTA_v2$mgi_symbol %in% "Drd3",])
library(topGO)
library(dplyr)
library(tidyr)
library(genefilter)
# Prepare the list of gene of interest and the list of the background
# set working directory
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
# read in the file with the normalized data
result <- read.csv("VTA_v2_all_comparsion.csv", header = TRUE,
stringsAsFactors = FALSE)
result$remark <- as.factor(result$remark)
# subset the genes of interest
gene.of.interest <- result[(result$remark %in% "significant") |
(result$remark %in% "significant & more than 1-fold"),]
# remove duplicated rows
gene.of.interest <- unique(gene.of.interest)
# define the gene background
# remove duplicated rows with different mgi_symbol but the same ensembl_gene_id
duplicate.row <- result[duplicated(result$ensembl_gene_id), ]
duplicate.row.list <- as.numeric(rownames(duplicate.row))
result.unique <- result[- duplicate.row.list, ]
rownames(result.unique) <- result.unique$ensembl_gene_id
gene.of.interest.list <- gene.of.interest$ensembl_gene_id
gene.of.interest.list <- unique(gene.of.interest.list)
overall.base.mean <- as.matrix(result.unique[,"baseMean", drop = F])
gene.background <- genefinder(overall.base.mean, gene.of.interest.list,
10, method = "euc")
gene.background <- rownames(overall.base.mean)[as.vector(sapply(gene.background,
function(x)x$indices))]
gene.background <- setdiff(gene.background, gene.of.interest$ensembl_gene_id)
gene.universe.list <- unique(c(gene.background, gene.of.interest.list))
gene.list <- factor(as.integer(gene.universe.list %in% gene.of.interest.list))
names(gene.list) <- gene.universe.list
library(ggplot2)
library(dplyr)
prepare_data_for_graph <- function(dds.results.table){
dds.results.table$highlight <- "not significant"
dds.results.table$highlight[dds.results.table$padj < 0.1] <- "significant"
dds.results.table$highlight <- factor(dds.results.table$highlight,
levels = c("not significant", "significant"))
return(dds.results.table)
}
vocanlo_plot <- function(dds.results.table, title){
gpr88 <- dds.results.table[dds.results.table$mgi_symbol %in% "Gpr88",]
# Volcano plot
g <- ggplot(dds.results.table, aes(x=log2FoldChange, y= -log10(pvalue)))
g <- g + geom_jitter(aes(color = highlight)) + scale_color_manual(values = c("grey", "black"))
g <- g + ylim(0, 8) + xlim(-8, 8)
g <- g + xlab("log2 (Fold change)") + ggtitle(title)
g <- g +  theme(text = element_text(size=16),
panel.background = element_rect(fill = NA),
axis.line = element_line(size = 0.8, colour = "black"),
axis.ticks = element_line(size = 1),
legend.position = c(0.89, 0.90),
legend.key = element_rect(size = 0.5, fill = "white", colour = "black"),
legend.title = element_blank(),
plot.title = element_text(hjust = 0.5))
g <- g + geom_point(aes(x = gpr88$log2FoldChange , y = -log10(gpr88$pvalue)), color = "red", size = 2.5)
return(g)
}
# load the dataframe with the gene info and remark added
setwd("~/Desktop/brainRNASeq/R_analysis/VTA_v2")
WT.light <- read.csv("VTA_v2_WT_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
Per1.light <- read.csv("VTA_v2_Per1_lightvsControl.csv", header = TRUE, stringsAsFactors = FALSE)
control.genotype <- read.csv("VTA_v2_WTvsPer1_control.csv", header = TRUE, stringsAsFactors = FALSE)
light.genotype <- read.csv("VTA_v2_WTvsPer1_light.csv", header = TRUE, stringsAsFactors = FALSE)
interaction <- read.csv("VTA_v2_effectAcrossGenotype.csv", header = TRUE, stringsAsFactors = FALSE)
WT.light.updated <- prepare_data_for_graph(WT.light)
vocanlo_plot(WT.light.updated, "WT control vs light")
Per1.light.updated <- prepare_data_for_graph(Per1.light)
vocanlo_plot(Per1.light.updated, "Per1 control vs light")
control.genotype.updated <- prepare_data_for_graph(control.genotype)
vocanlo_plot(control.genotype.updated, "WT vs Per1 (control)")
light.genotype.updated <- prepare_data_for_graph(light.genotype)
vocanlo_plot(light.genotype.updated, "WT vs Per1 (light)")
interaction.updated <- prepare_data_for_graph(interaction)
vocanlo_plot(interaction.updated, "Effect of genotype in light response")
